@using FeesPackage.Data_Access;
@using FeesPackage.Models;
@using Newtonsoft.Json;
@model List<Customer>

@{
    ViewBag.Title_Section1 = "QuickBooks Data";
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        ready();
    });
</script>

<div class="span9">
    <div class="content">
        <div class="module">
            <div class="module-head">
                <h3>
                    <i>@ViewBag.Title_Section1</i> [@Model.Count]
                </h3>
            </div>
            <div class="module-body table">
                <div id='jqxWidget' style="font-size: 13px; font-family: Verdana; float: left; width: 100%; height: 100%;">
                    <div id="jqxgrid"></div>
                </div>
            </div>
        </div>
        <!--/.module-->
    </div>
    <!--/.content-->
</div>
<!--/.span9-->

<div id="CaseDlg" style="display:none">
</div>

<style>
    .disabled {
        background-color: #e0e9f5;
    }

    .ui-dialog-titlebar-close:after {
        content: 'X';
        font-weight: bold;
    }

    .dlgButton {
        background-color: green;
        color: white;
    }
</style>

<script>
    var groups = [];
    var id;

    function ready() {
        // prepare the data
        var data = @Html.Raw(JsonConvert.SerializeObject(Model));

        var source =
        {
            dataType: "json",
            // NO UPDATEROW, Needles is read-only for now
            dataFields: [
                { name: 'Name', type: 'string' },
                { name: 'Address', type: 'string' },
                { name: 'City', type: 'string' },
                { name: 'State', type: 'string' },
                { name: 'Zip', type: 'string' }
            ],
            id: 'customer',
            localdata: data
        };

        var dataAdapter = new $.jqx.dataAdapter(source, {
            downloadComplete: function (data, status, xhr) { },
            loadComplete: function (data) { },
            beforeLoadComplete: function (records) { },
            loadError: function (xhr, status, error) { alert('loadError: status=' + status + ' error=' + error); },
        });

        var cellsrenderer_center = function (row, column, value) {
            return '<div style="text-align: center; margin-top: 5px;">' + value + '</div>';
        }

        var columnrenderer_center = function (value) {
            return '<div style="text-align: center; margin-top: 5px;">' + value + '</div>';
        }

        $('#jqxgrid').on('bindingcomplete', function (event) {
        });

        var cellsrenderer = function (row, column, value, defaultHtml, columnSettings, record) {
        }

        $("#jqxgrid").jqxGrid(
        {
            theme: 'energyblue',
            width: '100%',
            height: '50%',
            autowidth: false,
            source: dataAdapter,
            showfilterrow: true,
            filterable: true,
            pageable: true,
            pagesize: 100,
            pagesizeoptions: ['5', '10', '20', '50', '100'],
            groupable: false,
            editable: false,
            sortable: true,
            ready: function () { setup(); },
            columnsresize: true,
            columns: [
                { text: 'Name', datafield: 'Name', filtertype: 'checkedlist', width: 200, align: 'center' },
                { text: 'Address', datafield: 'Address', filtertype: 'checkedlist', width: 200, align: 'center' },
                { text: 'City', datafield: 'City', filtertype: 'checkedlist', width: 200, align: 'center' },
                { text: 'State', datafield: 'State', filtertype: 'checkedlist', width: 200, align: 'center' },
                { text: 'Zip', datafield: 'Zip', filtertype: 'checkedlist', width: 200, align: 'center' }
            ]
        });

        $("#jqxgrid").on("celldoubleclick", function (event) {
            var args = event.args;
            var rowBoundIndex = args.rowindex;
            //var rowVisibleIndex = args.visibleindex;
            //var rightClick = args.rightclick;
            //var ev = args.originalEvent;
            //var columnIndex = args.columnindex;
            //var dataField = args.datafield;
            //var value = args.value;

            // get 'id' value of row dblclk'd on
            var case_no = $("#jqxgrid").jqxGrid('getcell', rowBoundIndex, 'case').value;

            // render view/show dialog
            $.post('/CheckList/Edit', { case_no: case_no }, function (data, status, jqXHR) {
                $('#CaseDlg').html(data);
                $('.ui-dialog-title').html('Case #' + case_no);
                $("#CaseDlg").dialog("open");
            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert(textStatus + ': ' + errorThrown);
            });
        });

        var options = {
            callback: function (value) {
                var datafield = "Client_Name";
                var searchText = value;
                var filter_or_operator = 1;
                var filtervalue = searchText;
                var filtercondition = 'CONTAINS';

                var filtergroup = new $.jqx.filter();
                var filter = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);
                filtergroup.addfilter(filter_or_operator, filter);

                $("#jqxgrid").jqxGrid('clearfilters');
                $("#jqxgrid").jqxGrid('addfilter', datafield, filtergroup);
                $("#jqxgrid").jqxGrid('applyfilters');
            },
            wait: 750,
            highlight: true,
            allowSubmit: false,
            captureLength: 2
        }

        $("#search").typeWatch(options);
    }

    function getCookie(cname) {
        var name = cname + "=";
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }
        return "";
    }

    function setup() {
        $("#jqxgrid").jqxGrid('autoresizecolumns');

        $(window).bind('resize', function () {
            $("#jqxgrid").jqxGrid(
            {
                // set height of grid to available space
                height: $(window).height() - ($('.navbar').height()
                                            + $('.module').height()
                                            + $('.footer').height()
                                            + 100 // fudge factor for padding/margins
                                             )
            });
        }).trigger('resize');
    }
</script>
