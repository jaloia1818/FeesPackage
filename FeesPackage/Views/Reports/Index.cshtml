@using FeesPackage.Models;
@model ClientInfoModel

<style>
    .btn-enabled {
        cursor: default;
        pointer-events: auto;
        background-color: lightgreen;
    }

    .btn-disabled {
        cursor: not-allowed;
        pointer-events: none;
        background-color: #ededed;
    }
    .span12 .svg-inline--fa.fa-w-12,
    .span12 .svg-inline--fa {
        height: 30px;
        width: 30px;
    }
    .report_label {
        font-weight: bold;
        font-size: 10pt;
    }
    .ui-dialog-titlebar-close:after {
        content: 'X';
        font-weight: bold;
    }
</style>

<div class="span9">
    <div class="content">
        <div class="btn-controls">
            <div class="btn-box-row row-fluid">
                <div class="span9">
                    <div class="row-fluid">
                        <div class="span12">
                            <a onclick="ReferralEscrowDetail()" class="btn-box small span4">
                                <i class="fas fa-file-alt"></i><div class="report_label">Referral Escrow Detail</div>
                            </a><a onclick="ReferralEscrowSummary()" class="btn-box small span4">
                                <i class="fas fa-file-alt"></i><div class="report_label">Referral Escrow Summary</div>
                            </a><a onclick="ReferralStatement()" class="btn-box small span4">
                                <i class="fas fa-file-alt"></i><div class="report_label">Referral Report</div>
                            </a>
                        </div>
                    </div>
                    <div class="row-fluid">
                        <div class="span12">
                            <a onclick="MonthlyIncome()" class="btn-box small span4">
                                <i class="fas fa-file-alt"></i><div class="report_label">Monthly Income Report</div>
                            </a><a onclick="MonthlyIncomeDetail()" class="btn-box small span4">
                                <i class="fas fa-file-alt"></i><div class="report_label">Monthly Income Detail</div>
                            </a>
                        </div>
                    </div>
                    <div class="row-fluid">
                        <div class="span12">
                            <a onclick="ClaimsWithNoPayments()" class="btn-box small span4">
                                <i class="fas fa-file-alt"></i><div class="report_label">Claims w/ No Payments</div>
                            </a><a onclick="ClaimsWithNoPaymentsOver30Days()" class="btn-box small span4">
                                <i class="fas fa-file-alt"></i><div class="report_label">Claims w/ No Payments Over 30 Days</div>
                            </a><a onclick="ClaimsDormant()" class="btn-box small span4">
                                <i class="fas fa-file-alt"></i><div class="report_label">Dormant Claims Report</div>
                            </a>
                        </div>
                    </div>
                    <div class="row-fluid">
                        <div class="span12">
                            <a onclick="PostedDeposits()" class="btn-box small span4">
                                <i class="fas fa-file-alt"></i><div class="report_label">Print Range Posted Deposits</div>
                            </a><a onclick="RefAttyFeesByFP()" class="btn-box small span4">
                                <i class="fas fa-file-alt"></i><div class="report_label">Ref Atty Fees by FP</div>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--/#btn-controls-->
    </div>
    <!--/.content-->
</div>
<!--/.span9-->

<div id="ToFromDlg" style="display:none">
    <p>Begin date: <input type="text" id="fromDate" /></p>
    <p>End date: <input type="text" id="toDate" /></p>
</div>

<div id="AttyClientDlg" style="display:none">
    <p>Attorney:</p>
    <p>
        @Html.DropDownList("Attorneys", new SelectList(Model.Attys, "Id", "Name"), "Select Attorney", new { @class = "form-control", id = "atty" })
    </p>
    <p>Client:</p>
    <p>
        @Html.DropDownList("Clients", new SelectList(Model.Clients, "Client_Name", "Client_Name"), "Select Client", new { @class = "form-control", id = "client" })
    </p>
</div>

<div id="AttyDlg" style="display:none">
    <p>Attorney: [NO SELECTION = ALL]</p>
    <p>
        @Html.DropDownList("Attorneys", new SelectList(Model.Hand_Attys, "Id", "Name"), "Select Attorney", new { @class = "form-control", id = "han_atty" })
    </p>
</div>

<script>
    function ReferralEscrowDetail() {
        $('#ToFromDlg').dialog({
            buttons: [{
                text: "Run",
                "id": "run",
                click: function () {
                    window.open('/Reports/ReferralEscrowDetail?fromDate=' + $('#fromDate').val() + '&toDate=' + $('#toDate').val());
                    $('#ToFromDlg').dialog('close')
                }
            }],
            open: function () {
                $('#fromDate').datepicker({ title: 'From Date' }).blur();
                $('#toDate').datepicker({ title: 'To Date' }).blur();
                if ($('#toDate').val() == '')
                    $('#toDate').val('@DateTime.Today.ToString("MM/dd/yyyy")');
            },
            close: function () {
                $('#fromDate').datepicker('destroy');
                $('#toDate').datepicker('destroy');
            },
        });
    }
    function ReferralEscrowSummary() {
        $('#ToFromDlg').dialog({
            buttons: [{
                text: "Run",
                "id": "run",
                click: function () {
                    window.open('/Reports/ReferralEscrowSummary?fromDate=' + $('#fromDate').val() + '&toDate=' + $('#toDate').val());
                    $('#ToFromDlg').dialog('close')
                }
            }],
            open: function () {
                $('#fromDate').datepicker({ title: 'From Date' }).blur();
                $('#toDate').datepicker({ title: 'To Date' }).blur();
                if ($('#toDate').val() == '')
                    $('#toDate').val('@DateTime.Today.ToString("MM/dd/yyyy")');
            },
            close: function () {
                $('#fromDate').datepicker('destroy');
                $('#toDate').datepicker('destroy');
            },
        });
    }
    function ReferralStatement() {
        $('#ToFromDlg').dialog({
            buttons: [{
                text: "Run",
                "id": "run",
                click: function () {
                    window.open('/Reports/ReferralStatement?fromDate=' + $('#fromDate').val() + '&toDate=' + $('#toDate').val());
                    $('#ToFromDlg').dialog('close')
                }
            }],
            open: function () {
                $('#fromDate').datepicker({ title: 'From Date' }).blur();
                $('#toDate').datepicker({ title: 'To Date' }).blur();
                if ($('#toDate').val() == '')
                    $('#toDate').val('@DateTime.Today.ToString("MM/dd/yyyy")');
            },
            close: function () {
                $('#fromDate').datepicker('destroy');
                $('#toDate').datepicker('destroy');
            },
        });
    }
    function MonthlyIncome() {
        $('#ToFromDlg').dialog({
            buttons: [{
                text: "Run",
                "id": "run",
                click: function () {
                    window.open('/Reports/MonthlyIncome?fromDate=' + $('#fromDate').val() + '&toDate=' + $('#toDate').val());
                    $('#ToFromDlg').dialog('close')
                }
            }],
            open: function () {
                $('#fromDate').datepicker({ title: 'From Date' }).blur();
                $('#toDate').datepicker({ title: 'To Date' }).blur();
                if ($('#toDate').val() == '')
                    $('#toDate').val('@DateTime.Today.ToString("MM/dd/yyyy")');
            },
            close: function () {
                $('#fromDate').datepicker('destroy');
                $('#toDate').datepicker('destroy');
            },
        });
    }
    function MonthlyIncomeDetail() {
        $('#ToFromDlg').dialog({
            buttons: [{
                text: "Run",
                "id": "run",
                click: function () {
                    window.open('/Reports/MonthlyIncomeDetail?fromDate=' + $('#fromDate').val() + '&toDate=' + $('#toDate').val());
                    $('#ToFromDlg').dialog('close')
                }
            }],
            open: function () {
                $('#fromDate').datepicker({ title: 'From Date' }).blur();
                $('#toDate').datepicker({ title: 'To Date' }).blur();
                if ($('#toDate').val() == '')
                    $('#toDate').val('@DateTime.Today.ToString("MM/dd/yyyy")');
            },
            close: function () {
                $('#fromDate').datepicker('destroy');
                $('#toDate').datepicker('destroy');
            },
        });
    }
    function ClaimsWithNoPayments() {
        $('#AttyDlg').dialog({
            buttons: [{
                text: "Run",
                "id": "run",
                click: function () {
                    window.open('/Reports/ClaimsWithNoPayments?atty=' + $('#han_atty').val());
                    $('#AttyDlg').dialog('close')
                }
            }],
            open: function () {
            },
            close: function () {
            },
        });
    }
    function ClaimsWithNoPaymentsOver30Days() {
        $('#AttyDlg').dialog({
            buttons: [{
                text: "Run",
                "id": "run",
                click: function () {
                    window.open('/Reports/ClaimsWithNoPaymentsOver30Days?atty=' + $('#han_atty').val());
                    $('#AttyDlg').dialog('close')
                }
            }],
            open: function () {
            },
            close: function () {
            },
        });
    }
    function ClaimsDormant() {
        $('#AttyDlg').dialog({
            buttons: [{
                text: "Run",
                "id": "run",
                click: function () {
                    window.open('/Reports/ClaimsDormant?atty=' + $('#han_atty').val());
                    $('#AttyDlg').dialog('close')
                }
            }],
            open: function () {
            },
            close: function () {
            },
        });
    }
    function PostedDeposits() {
        $('#ToFromDlg').dialog({
            buttons: [{
                text: "Run",
                "id": "run",
                click: function () {
                    window.open('/Reports/PostedDeposits?fromDate=' + $('#fromDate').val() + '&toDate=' + $('#toDate').val());
                    $('#ToFromDlg').dialog('close')
                }
            }],
            open: function () {
                $('#fromDate').datepicker({ title: 'From Date' }).blur();
                $('#toDate').datepicker({ title: 'To Date' }).blur();
                if ($('#toDate').val() == '')
                    $('#toDate').val('@DateTime.Today.ToString("MM/dd/yyyy")');
            },
            close: function () {
                $('#fromDate').datepicker('destroy');
                $('#toDate').datepicker('destroy');
            },
        });
    }
    function RefAttyFeesByFP() {
        $('#AttyClientDlg').dialog({
            buttons: [{
                text: "Run",
                "id": "run",
                click: function () {
                    window.open('/Reports/RefAttyFeesByFP?atty=' + $('#atty').val() + '&client=' + $('#client').val());
                    $('#AttyClientDlg').dialog('close')
                }
            }],
            open: function () {
                setRunBtn();

                $('#atty').change(function () {
                    setRunBtn();
                })

                $('#client').change(function () {
                    setRunBtn();
                })
            },
            close: function () {
            },
        });
    }
    function setRunBtn() {
        if ($('#atty option:selected').val() == '' && $('#client option:selected').val() == '') {
            $('#run').prop('disabled', true);
            $('#run').removeClass('btn-enabled');
            $('#run').addClass('btn-disabled');
        }
        else {
            $('#run').prop('disabled', false);
            $('#run').removeClass('btn-disabled');
            $('#run').addClass('btn-enabled');
        }
    }
</script>
